---
name: Docker Release

on:
  workflow_call:
    inputs:
      image-tag:
        required: true
        type: string

jobs:
  job_docker_release:
    name: Publish images
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Set up vars used in next step
        id: vars
        shell: bash
        run: |
          echo "IMAGE_TAG_CLEAN=$(echo ${{ inputs.image-tag }} | tr '/' '-' )" >> $GITHUB_OUTPUT
          echo "GIT_HASH_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "DATE_IN_SECS=$(date +%s)" >> $GITHUB_OUTPUT
      - name: Build and Push image to Docker Hub and ghcr.io
        uses: docker/build-push-action@v3
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          push: true     # true to upload image to registry
          tags: |
            vocdoni/vocdoni-node:latest,
            vocdoni/vocdoni-node:${{ steps.vars.outputs.IMAGE_TAG_CLEAN }},
            vocdoni/vocdoni-node:${{ steps.vars.outputs.IMAGE_TAG_CLEAN }}-${{ steps.vars.outputs.DATE_IN_SECS }}
            vocdoni/vocdoni-node:commit-${{ steps.vars.outputs.GIT_HASH_SHORT }},
            ghcr.io/vocdoni/vocdoni-node:latest,
            ghcr.io/vocdoni/vocdoni-node:${{ steps.vars.outputs.IMAGE_TAG_CLEAN }},
            ghcr.io/vocdoni/vocdoni-node:${{ steps.vars.outputs.IMAGE_TAG_CLEAN }}-${{ steps.vars.outputs.DATE_IN_SECS }}
            ghcr.io/vocdoni/vocdoni-node:commit-${{ steps.vars.outputs.GIT_HASH_SHORT }},
          cache-from: type=gha
          cache-to: type=gha,mode=max
